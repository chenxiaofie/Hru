generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  emailVerified  DateTime?
  contacts       Contact[]
  visitLogs      VisitLog[]
  accounts       Account[]
  sessions       Session[]
}

model Contact {
  id        Int    @id @default(autoincrement())
  name      String
  email     String
  user      User   @relation(fields: [userId], references: [id])
  userId    String
}

model VisitLog {
  id        Int      @id @default(autoincrement())
  date      DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires   DateTime

  @@unique([identifier, token])
}

model MailLog {
  id        Int      @id @default(autoincrement())
  userId    String
  contactId Int
  sentAt    DateTime @default(now())
  status    String   // 'success' æˆ– 'fail'
  error     String?
} 